{"version":3,"sources":["test.ts"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["/*\n\n  当 @Injectable 标记 B，而 B 继承自 A 时，如果 B 没有自己的构造函数，则 A 必须使用 @Injectable 标记；否则，将会出现未知错误。\n\n  以下是允许的：\n      \n      @Injectable\n      class A {\n        constructor(public m: M, public i: number, public s: string, public a: Array<string>, public o: Object, public j: JSON, public u: undefined, public n: null) {\n          \n        }\n\n        public abc() {}\n      }\n\n      @Injectable\n      class B extends A {\n\n        public abc() {}\n\n        public efg() {}\n      }\n\n  以下是不允许的：\n\n      class A {\n        constructor(public m: M, public i: number, public s: string, public a: Array<string>, public o: Object, public j: JSON, public u: undefined, public n: null) {\n          \n        }\n\n        public abc() {}\n      }\n\n      @Injectable\n      class B extends A {\n        public abc() {}\n\n        public efg() {}\n      }\n*/\n\nimport { Suite, Test, SuiteSetup, SuiteTeardown, Setup, Teardown, TestContainer } from 'jest-decorators'\nimport { LDIProvider, Injectable } from './index'\n\n@Injectable\nclass M {\n  private get10(): number {\n    return 100\n  }\n\n  public get100(): number {\n    return 100\n  }\n}\n\nclass A {\n  constructor(public m: M) {\n  }\n\n  public abc() {}\n}\n\n@Injectable\nclass B extends A {\n  public x = 0\n\n  constructor(public m: M, public i: number, public s: string, public a: Array<string>, public o: Object, public j: JSON, public u: undefined, public n: null) {\n    super(m)\n  }\n\n  public abc() {}\n\n  public efg() {}\n\n  public onCreate() {\n    this.x = 100\n  }\n\n  public onDestroy() {\n    this.x = 0\n  }\n}\n\n@Suite\nclass ApplicationTest {\n  private b: B\n\n  @SuiteSetup\n  private suiteSetup() {\n    this.b = LDIProvider.get(B)\n  }\n\n  @Test\n  private get() {\n    expect(this.b.m instanceof M).toBeTruthy()\n    expect(typeof this.b.i === 'number').toBeTruthy()\n    expect(typeof this.b.s === 'string').toBeTruthy()\n    expect(this.b.a instanceof Array).toBeTruthy()\n    expect(typeof this.b.o === 'object' && this.b.o !== null).toBeTruthy()\n    expect(typeof this.b.j === 'object' && this.b.j !== null).toBeTruthy()\n    expect(typeof this.b.u === 'undefined').toBeTruthy()\n    expect(typeof this.b.n === 'undefined').toBeTruthy()\n    expect(typeof this.b.abc === 'function').toBeTruthy()\n    expect(typeof this.b.efg === 'function').toBeTruthy()\n    expect(this.b.x).toBe(100)\n  }\n\n  @Test\n  private destroy() {\n    LDIProvider.destroy()\n    expect(this.b.x).toBe(0)\n  }\n}\n\nTestContainer.run()\n\n"]}