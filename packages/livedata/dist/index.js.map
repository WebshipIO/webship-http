{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;AAmBA,MAAa,QAAQ;IAArB;QAEU,aAAQ,GAAwC,IAAI,GAAG,EAAE,CAAA;IAiEnE,CAAC;IA/DQ,OAAO,CAAC,GAAmB,EAAE,EAAmB;QACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC1B,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAmB,CAAA;YACtD,IAAI,OAAO,CAAC,QAAQ,YAAY,KAAK,EAAE;gBACrC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;aAC1B;iBAAM;gBACL,OAAO,CAAC,QAAQ,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;aAC1C;SACF;aAAM;YACL,IAAI,QAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;YAC9C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE;gBACrB,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAA;YACF,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAA;SAC9B;IACH,CAAC;IAEY,GAAG,CAAC,KAAQ;;YACvB,MAAM,OAAO,CAAC,OAAO,EAAE,CAAA;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;YACnB,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE;gBAC1C,IAAI,OAAO,CAAC,QAAQ,YAAY,KAAK,EAAE;oBACrC,KAAK,IAAI,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE;wBAC/B,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;qBAChB;iBACF;qBAAM;oBACL,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;iBAC9B;aACF;QACH,CAAC;KAAA;IAED,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,MAAM,CAAA;IACpB,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAA;IAC/B,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAA;IAC3B,CAAC;IAEM,WAAW,CAAC,GAAmB;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC/B,CAAC;IAEM,cAAc,CAAC,GAAmB;QACvC,GAAG,CAAC,kBAAkB,CAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAoB,CAAC,QAAQ,CAAC,CAAA;QAC3E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;IAC3B,CAAC;IAEM,mBAAmB,CAAC,GAAmB;QAC5C,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC1B,GAAG,CAAC,kBAAkB,CAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAoB,CAAC,QAAQ,CAAC,CAAA;YAC3E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;SAC1B;IACH,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAA;IACvB,CAAC;CACF;AAnED,4BAmEC","file":"index.js","sourcesContent":["\nexport interface LifecycleOwner {\n  addLiveCanceler(cb: LiveCanceler): void\n  deleteLiveCanceler(cb: LiveCanceler): void\n}\n\nexport interface LiveCanceler {\n  (): void\n}\n\nexport interface LiveCallback<T> {\n  (value: T): void\n} \n\ninterface LiveHandler<T> {\n  callback: LiveCallback<T> | Array<LiveCallback<T>>\n  canceler: LiveCanceler\n}\n\nexport class LiveData<T> {\n  private _value: T\n  private handlers: Map<LifecycleOwner, LiveHandler<T>> = new Map()\n\n  public observe(com: LifecycleOwner, cb: LiveCallback<T>) {\n    if (this.handlers.has(com)) {\n      let handler = this.handlers.get(com) as LiveHandler<T>\n      if (handler.callback instanceof Array) {\n        handler.callback.push(cb)\n      } else {\n        handler.callback = [handler.callback, cb]\n      }\n    } else {\n      let canceler = () => this.handlers.delete(com)\n      this.handlers.set(com, {\n        callback: cb,\n        canceler: canceler\n      })\n      com.addLiveCanceler(canceler)\n    }\n  }\n\n  public async set(value: T) {\n    await Promise.resolve()\n    this._value = value\n    for (let handler of this.handlers.values()) {\n      if (handler.callback instanceof Array) {\n        for (let cb of handler.callback) {\n          cb(this._value)\n        }\n      } else {\n        handler.callback(this._value)\n      }\n    }\n  }\n\n  public get value(): T {\n    return this._value\n  }\n\n  public hasObservers(): boolean {\n    return this.handlers.size > 0\n  }\n\n  public sizeOfObservers(): number {\n    return this.handlers.size\n  }\n\n  public hasObserver(com: LifecycleOwner) {\n    return this.handlers.has(com)\n  }\n\n  public deleteObserver(com: LifecycleOwner) {\n    com.deleteLiveCanceler((this.handlers.get(com) as LiveHandler<T>).canceler)\n    this.handlers.delete(com)\n  }\n\n  public deleteObserverIfHas(com: LifecycleOwner) {\n    if (this.handlers.has(com)) {\n      com.deleteLiveCanceler((this.handlers.get(com) as LiveHandler<T>).canceler)\n      this.handlers.delete(com)\n    }\n  }\n\n  public clearObservers() {\n    this.handlers.clear()\n  }\n}\n"]}