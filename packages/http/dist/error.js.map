{"version":3,"sources":["error.ts"],"names":[],"mappings":"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","file":"error.js","sourcesContent":["import {STATUS_CODES} from 'http'\n\nexport enum HttpErrorCode {\n  BAD_REQEUST,\n  UNAUTHORIZED,\n  FORBIDDEN,\n  NOT_FOUND,\n  METHOD_NOT_ALLOWED,\n  NOT_ACCEPTABLE,\n  PROXY_AUTHENTICATION_REQUIRED,\n  REQUEST_TIMEOUT,\n  CONFLIT,\n  INTERNAL_SERVER_ERROR,\n  BAD_GATEWAY,\n  GATEWAY_TIMEOUT\n}\n\nexport class HttpError extends Error {\n  public static create(code: HttpErrorCode, msg?: string, stack?: string): HttpError {\n    return new HttpError(code, msg, stack)\n  }\n  \n  public readonly statusCode: number\n  public readonly message: string\n\n  constructor(code: HttpErrorCode, msg?: string, stack?: string) {\n    let statusCode: number\n    let message: string\n    switch (code) {\n    case HttpErrorCode.BAD_REQEUST:\n      statusCode = 400\n      message = STATUS_CODES[statusCode]\n      break  \n    case HttpErrorCode.UNAUTHORIZED:\n      statusCode = 401\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.FORBIDDEN:\n      statusCode = 403\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.NOT_FOUND:\n      statusCode = 404\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.METHOD_NOT_ALLOWED:\n      statusCode = 405\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.NOT_ACCEPTABLE:\n      statusCode = 406\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.PROXY_AUTHENTICATION_REQUIRED:\n      statusCode = 407\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.REQUEST_TIMEOUT:\n      statusCode = 408\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.CONFLIT:\n      statusCode = 409\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.INTERNAL_SERVER_ERROR:\n      statusCode = 500\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.BAD_GATEWAY:\n      statusCode = 502\n      message = STATUS_CODES[statusCode]\n      break\n    case HttpErrorCode.GATEWAY_TIMEOUT:\n      statusCode = 504\n      message = STATUS_CODES[statusCode]\n      break\n    default:\n      statusCode = 500\n      message = STATUS_CODES[statusCode]\n      break\n    }\n    if (typeof msg === 'string') {\n      message = msg\n    } \n    super(message)\n    this.statusCode = statusCode\n    this.message = message\n    if (typeof stack === 'string') {\n      this.stack = this.stack + '\\n' + stack\n    }\n  }\n}\n\nexport function cond(condition: boolean, code: HttpErrorCode, msg?: string, stack?: string): void {\n  if (!condition) {\n    throw new HttpError(code, msg, stack)\n  }\n}"]}