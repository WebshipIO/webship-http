{"version":3,"sources":["response.ts"],"names":[],"mappings":";;AAsBA,MAAa,kBAAkB;IAA/B;QACU,WAAM,GAAe,GAAG,CAAA;QACxB,SAAI,GAA+B,IAAI,CAAA;QACvC,YAAO,GAAwB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IAuC5D,CAAC;IArCQ,SAAS,CAAC,GAAW,EAAE,KAAiC;QAC7D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IAC3B,CAAC;IAEM,SAAS,CAAC,GAAW;QAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC1B,CAAC;IAEM,SAAS,CAAC,GAAW;QAC1B,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;IACvC,CAAC;IAEM,YAAY,CAAC,GAAW;QAC7B,OAAO,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;IAClD,CAAC;IAEM,CAAE,aAAa;QACpB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,MAAM,GAAG,CAAA;SACV;IACH,CAAC;IAEM,CAAE,eAAe;QACtB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;SACrC;IACH,CAAC;IAEM,CAAE,gBAAgB;QACvB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAA;SAC5C;IACH,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;CACF;AA1CD,gDA0CC","file":"response.js","sourcesContent":["import {OutgoingHttpHeaders, ServerResponse as NativeServerResponse} from 'http'\nimport {Readable} from 'stream'\n\nexport type HttpStatus = 100 | 101 | 102 | 200 | 201 | 202 | 203 | 204 | 205 | 206 | 207 | 208 | 226 | \n                         300 | 301 | 302 | 303 | 304 | 305 | 307 | 308 |\n                         400 | 401 | 402 | 403 | 404 | 405 | 406 | 407 | 408 | 409 | 410 | 411 | 412 | 413 | 414 | 415 | 416 | \n                         417 | 418 | 421 | 422 | 423 | 424 | 425 | 426 | 428 | 429 | 431 | 451 | \n                         500 | 501 | 502 | 503 | 504 | 505 | 506 | 507 | 508 | 509 | 510 | 511\n\nexport interface ServerResponse {\n  status: HttpStatus\n  body: Object | string | Readable\n  setHeader(key: string, value: number | string | string[]): void\n  getHeader(key: string): number | string | string[] | undefined\n  hasHeader(key: string): boolean\n  removeHeader(key: string): void\n  keysOfHeaders(): Iterable<string>\n  valuesOfHeaders(): Iterable<number | string | string[]>\n  entriesOfHeaders(): Iterable<[string, number | string | string[]]>\n  getHeaders(): OutgoingHttpHeaders\n}\n\nexport class ServerResponseImpl implements ServerResponse {\n  public  status: HttpStatus = 200\n  public  body: Object | string | Readable = null\n  private headers: OutgoingHttpHeaders = Object.create(null)\n\n  public setHeader(key: string, value: number | string | string[]) {\n    this.headers[key] = value\n  }\n\n  public getHeader(key: string): number | string | string[] | undefined {\n    return this.headers[key]\n  }\n\n  public hasHeader(key: string): boolean {\n    return Reflect.has(this.headers, key)\n  }\n\n  public removeHeader(key: string) {\n    return Reflect.deleteProperty(this.headers, key)\n  }\n\n  public * keysOfHeaders(): Iterable<string> {\n    for (let key in this.headers) {\n      yield key\n    }\n  }\n\n  public * valuesOfHeaders(): Iterable<number | string | string[]> {\n    for (let key in this.headers) {\n      yield Reflect.get(this.headers, key)\n    }\n  }\n\n  public * entriesOfHeaders(): Iterable<[string, number | string | string[]]> {\n    for (let key in this.headers) {\n      yield [key, Reflect.get(this.headers, key)]\n    }\n  }\n\n  public getHeaders(): OutgoingHttpHeaders {\n    return this.headers\n  }\n}\n"]}