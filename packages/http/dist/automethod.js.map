{"version":3,"sources":["automethod.ts"],"names":[],"mappings":";;AAGA,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,yDAAO,CAAA;IACP,2DAAQ,CAAA;IACR,iEAAW,CAAA;IAAE,qEAAa,CAAA;IAAE,yEAAe,CAAA;IAAE,uEAAc,CAAA;IAAE,mEAAY,CAAA;IACzE,qDAAK,CAAA;AACP,CAAC,EALW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAKzB;AAID,MAAa,oBAAoB;IAI/B,YAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAC9B,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAA;IAClB,CAAC;IAEM,YAAY,CAAC,KAAa,EAAE,KAAqB;QACtD,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAA;SAC5B;QACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;IACnC,CAAC;IAEM,aAAa;QAClB,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;YACjC,OAAO,KAAK,CAAA;SACb;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAA;IACjC,CAAC;IAEM,CAAE,mBAAmB;QAC1B,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;YACjC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE;gBAC1C,MAAM,IAAI,CAAA;aACX;SACF;IACH,CAAC;IAEM,aAAa,CAAC,CAAa;QAChC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAA;SACtB;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC1B,CAAC;IAEM,CAAE,mBAAmB;QAC1B,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC9B,MAAM,CAAC,CAAA;aACR;SACF;IACH,CAAC;CACF;AA/CD,oDA+CC;AAED,MAAa,iBAAiB;IAA9B;QACU,mBAAc,GAAe,GAAG,CAAA;IAS1C,CAAC;IAPQ,iBAAiB,CAAC,cAA0B;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAA;IACtC,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAA;IAC5B,CAAC;CACF;AAVD,8CAUC","file":"automethod.js","sourcesContent":["import {ClassType, Node} from '@webnode/cdi'\nimport {HttpStatus} from './response'\n\nexport enum ParameterPoint {\n  REQUEST, \n  RESPONSE, \n  REQUEST_URI, REQUEST_QUERY, REQUEST_HEADERS, REQUEST_PARAMS, REQUEST_BODY, \n  ERROR\n}\n\nexport type AutoMethod = (...args: Array<any>) => void | Promise<void>\n\nexport class AutoMethodProperties {\n  private parameters: Map<number, ParameterPoint>\n  private middlewares?: Array<AutoMethod>\n\n  constructor(private node: Node) {\n  }\n\n  public getNode(): Node {\n    return this.node\n  }\n\n  public setParameter(index: number, point: ParameterPoint) {\n    if (this.parameters === undefined) {\n      this.parameters = new Map()\n    }\n    this.parameters.set(index, point)\n  }\n\n  public hasParameters(): boolean {\n    if (this.parameters === undefined) {\n      return false\n    }\n    return this.parameters.size > 0\n  }\n\n  public * entriesOfParameters(): Iterable<[number, ParameterPoint]> {\n    if (this.parameters !== undefined) {\n      for (let item of this.parameters.entries()) {\n        yield item\n      }\n    }\n  }\n\n  public addMiddleware(m: AutoMethod) {\n    if (this.middlewares === undefined) {\n      this.middlewares = []\n    }\n    this.middlewares.push(m)\n  }\n\n  public * valuesOfMiddlewares(): Iterable<AutoMethod> {\n    if (this.middlewares !== undefined) {\n      for (let m of this.middlewares) {\n        yield m\n      }\n    }\n  }\n}\n\nexport class AutoMethodPayload {\n  private responseStatus: HttpStatus = 200\n\n  public setResponseStatus(responseStatus: HttpStatus) {\n    this.responseStatus = responseStatus\n  }\n\n  public getResponseStatus(): HttpStatus {\n    return this.responseStatus\n  }\n}\n\nexport type AutoMethodPropertiesContainer = Map<AutoMethod, AutoMethodProperties>\nexport type AutoMethodPayloadContainer = Map<AutoMethod, AutoMethodPayload>"]}