{"version":3,"sources":["test/event.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA0C;AAC1C,+BAA0B;AAC1B,qDAAsG;AACtG,sCAAmG;AACnG,0BAA8E;AAC9E,0BAAoF;AACpF,0BAAmF;AACnF,0BAA2E;AAE3E,MAAM,CAAC;IAAP;QACE,sBAAiB,GAAG,CAAC,CAAA;QACrB,oBAAe,GAAG,CAAC,CAAA;IACrB,CAAC;CAAA;AAED,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AAG3B,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAEtB,YAAY;QAClB,CAAC,CAAC,iBAAiB,GAAG,GAAG,CAAA;IAC3B,CAAC;IAGO,UAAU;QAChB,CAAC,CAAC,eAAe,GAAG,GAAG,CAAA;IACzB,CAAC;IAGO,YAAY;IACpB,CAAC;CACF,CAAA;AAZC;IADC,gBAAY;;;;8DAGZ;AAGD;IADC,cAAU;;;;4DAGV;AAGD;IADC,gBAAY;;;;8DAEZ;AAbG,0BAA0B;IAD/B,oBAAgB;GACX,0BAA0B,CAc/B;AAGD,IAAM,IAAI,GAAV,MAAM,IAAI;IAEA,IAAI,CACH,GAAmB,EACH,CAAI;QAE3B,GAAG,CAAC,IAAI,GAAG;YACT,CAAC,EAAE,CAAC;SACL,CAAA;IACH,CAAC;CACF,CAAA;AARC;IADC,OAAG,CAAC,GAAG,CAAC;IAEN,WAAA,OAAG,EAAE,CAAA;IACL,WAAA,sBAAgB,CAAC,GAAG,CAAC,CAAA;;qCADV,kBAAc;QACA,CAAC;;gCAK5B;AATG,IAAI;IADT,cAAU;GACL,IAAI,CAUT;AAGD,IAAM,UAAU,GAAhB,MAAM,UAAU;IAMA,UAAU;;YACtB,uBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAK,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAA;YAEnE,IAAI,CAAC,KAAK,GAAG,IAAI,YAAK,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAA;YACzC,IAAI,CAAC,GAAG,GAAG,cAAU,CAAC,MAAM,CAAC,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC,CAAA;YACtD,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAA;YACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,IAAI,CAAA;QACrC,CAAC;KAAA;IAGa,QAAQ;;YACpB,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAA;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAA;YACpB,uBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;QAC3D,CAAC;KAAA;IAGa,GAAG;;YACf,IAAI,GAAG,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,CAAC,IAAI,GAAG,EAAE;gBAC5D,uBAAuB,EAAE,IAAI;gBAC7B,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB,CAAC,CAAA;YACF,MAAM,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACrC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACrC,CAAC;KAAA;CACF,CAAA;AA1BC;IADC,4BAAU;;;;4CAQV;AAGD;IADC,+BAAa;;;;0CAKb;AAGD;IADC,sBAAI;;;;qCASJ;AA/BG,UAAU;IADf,uBAAK;GACA,UAAU,CAgCf;AAED,+BAAa,CAAC,GAAG,EAAE,CAAA","file":"event.test.js","sourcesContent":["import * as request from 'request-promise'\nimport {Agent} from 'http'\nimport {Suite, Test, SuiteSetup, SuiteTeardown, Setup, Teardown, TestContainer} from 'jest-decorators'\nimport {ApplicationScope, SessionScope, RequestScope, Scope, ProviderContainer} from '@webnode/cdi'\nimport {HttpServer, ServerRequest, ServerResponse, RePathnameParams} from '..'\nimport {Controller, Get, Post, Put, Delete, Head, Options, Trace, Connect} from '..'\nimport {ParameterMapping, Req, Res, Uri, Headers, Params, Query, ReqBody} from '..'\nimport {RequestLifecycle, RequestStart, RequestEnd, RequestError} from '..'\n\nclass A {\n  requestStartValue = 0\n  requestEndValue = 0\n}\n\nlet a = Object.create(null) \n\n@RequestLifecycle\nclass DefaultConnectionLifecycle {\n  @RequestStart\n  private requestStart() {\n    a.requestStartValue = 100\n  }\n\n  @RequestEnd\n  private requestEnd() {\n    a.requestEndValue = 100\n  }\n\n  @RequestError\n  private requestError() {\n  }\n}\n\n@Controller\nclass Home {\n  @Get('/')\n  private getA(\n    @Res() res: ServerResponse,\n    @ApplicationScope('a') a: A\n  ) {\n    res.body = {\n      a: a\n    }\n  }\n}\n\n@Suite\nclass ServerTest {\n  private app: HttpServer\n  private port: number\n  private agent: Agent\n\n  @SuiteSetup\n  private async suiteSetup() {\n    ProviderContainer.instance.set(Scope.APPLICATION, 'a', () => new A)\n\n    this.agent = new Agent({keepAlive: true})\n    this.app = HttpServer.create({keepAliveTimeout: 1000})\n    await this.app.serve()\n    this.port = this.app.address().port\n  }\n\n  @SuiteTeardown\n  private async teardown() {\n    await this.app.close()\n    this.agent.destroy()\n    ProviderContainer.instance.delete(Scope.APPLICATION, 'a')\n  }\n\n  @Test\n  private async get() {\n    let res = await request.get(`http://127.0.0.1:${this.port}/`, {\n      resolveWithFullResponse: true, \n      json: true,\n      agent: this.agent\n    })\n    expect(a.requestStartValue).toBe(100)\n    expect(a.requestEndValue).toBe(100)\n  }\n}\n\nTestContainer.run()"]}