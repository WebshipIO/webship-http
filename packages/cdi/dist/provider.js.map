{"version":3,"sources":["provider.ts"],"names":[],"mappings":";;AAWA,mCAA6B;AAS7B,MAAa,iBAAiB;IAA9B;QAUU,mBAAc,GAAgB,IAAI,GAAG,EAAE,CAAA;QACvC,eAAU,GAAgB,IAAI,GAAG,EAAE,CAAA;QACnC,eAAU,GAAgB,IAAI,GAAG,EAAE,CAAA;IAoD7C,CAAC;IA7DQ,MAAM,KAAK,QAAQ;QACxB,IAAI,iBAAiB,CAAC,SAAS,KAAK,SAAS,EAAE;YAC7C,iBAAiB,CAAC,SAAS,GAAG,IAAI,iBAAiB,EAAE,CAAA;SACtD;QACD,OAAO,iBAAiB,CAAC,SAAS,CAAA;IACpC,CAAC;IAMM,GAAG,CAAC,KAAY,EAAE,GAAgB,EAAE,QAAkB;QAC3D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;IAC5C,CAAC;IAEM,GAAG,CAAC,KAAY,EAAE,GAAgB;QACvC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACzC,CAAC;IAEM,GAAG,CAAC,KAAY,EAAE,GAAgB;QACvC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACzC,CAAC;IAEM,MAAM,CAAC,KAAY,EAAE,GAAgB;QAC1C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;IACrC,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAA;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAA;QACvB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAA;IACzB,CAAC;IAEM,IAAI,CAAC,KAAY;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAA;IACrC,CAAC;IAEM,CAAE,MAAM,CAAC,KAAY;QAC1B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,EAAE;YACjD,MAAM,IAAI,CAAA;SACX;IACH,CAAC;IAEM,CAAE,OAAO,CAAC,KAAY;QAC3B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE;YAClD,MAAM,IAAI,CAAA;SACX;IACH,CAAC;IAEO,WAAW,CAAC,KAAY;QAC9B,QAAQ,KAAK,EAAE;YACf,KAAK,aAAK,CAAC,WAAW;gBACpB,OAAO,IAAI,CAAC,cAAc,CAAA;YAC5B,KAAK,aAAK,CAAC,OAAO;gBAChB,OAAO,IAAI,CAAC,UAAU,CAAA;YACxB,KAAK,aAAK,CAAC,OAAO;gBAChB,OAAO,IAAI,CAAC,UAAU,CAAA;YACxB;gBACE,MAAM,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;SAC7C;IACH,CAAC;CACF;AAhED,8CAgEC","file":"provider.js","sourcesContent":["/*\n  这个模块说明依赖的 Provider。为了保证依赖元素在运行时的可用性，\n  Provider 必须首先是一个 Object，即根对象。假如 Provider 不是一个\n  Object，而是，比如一个 number，那么这样的数据更像是一个配置值，这\n  样的数据在环境共享的时候没有太多的用处。对于配置值，更好的办法是提供\n  一个 Config Provider，并且把所需要的配置值放置在 Config 对象当中，\n  这样可以提供更大的灵活性和实用性。\n\n  同样的，对于 undefined、null 都没有任何实用性。\n*/\n\nimport {Scope} from './scope'\nimport {Context} from './context'\n\nexport type Provider = (context: Context) => ProviderInstance | Promise<ProviderInstance>\nexport type ProviderInstance = NonNullable<Object>\nexport type ProviderKey = PropertyKey\nexport type ProviderMap = Map<ProviderKey, Provider>\nexport type ProviderInstanceContainer = Map<ProviderKey, ProviderInstance>\n\nexport class ProviderContainer {\n  private static sInstance: ProviderContainer\n\n  public static get instance(): ProviderContainer {\n    if (ProviderContainer.sInstance === undefined) {\n      ProviderContainer.sInstance = new ProviderContainer()\n    }\n    return ProviderContainer.sInstance\n  }\n  \n  private applicationMap: ProviderMap = new Map()\n  private sessionMap: ProviderMap = new Map()\n  private requestMap: ProviderMap = new Map()\n\n  public set(scope: Scope, key: ProviderKey, provider: Provider) {\n    this.getScopeMap(scope).set(key, provider)\n  }\n\n  public has(scope: Scope, key: ProviderKey): boolean {\n    return this.getScopeMap(scope).has(key)\n  }\n\n  public get(scope: Scope, key: ProviderKey): Provider {\n    return this.getScopeMap(scope).get(key)\n  }\n\n  public delete(scope: Scope, key: ProviderKey) {\n    this.getScopeMap(scope).delete(key)\n  }\n\n  public clear() {\n    this.applicationMap.clear()\n    this.sessionMap.clear()\n    this.requestMap.clear()\n  }\n\n  public size(scope: Scope): number {\n    return this.getScopeMap(scope).size\n  }\n\n  public * values(scope: Scope): Iterable<Provider> {\n    for (let item of this.getScopeMap(scope).values()) {\n      yield item\n    }\n  }\n\n  public * entries(scope: Scope): Iterable<[ProviderKey, Provider]> {\n    for (let item of this.getScopeMap(scope).entries()) {\n      yield item\n    }\n  }\n\n  private getScopeMap(scope: Scope): ProviderMap {\n    switch (scope) {\n    case Scope.APPLICATION:\n      return this.applicationMap\n    case Scope.SESSION:\n      return this.sessionMap\n    case Scope.REQUEST:\n      return this.requestMap\n    default: \n      throw new Error('bad scope' + String(scope))\n    }\n  }\n}\n\n\n\n\n"]}