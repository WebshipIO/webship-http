{"version":3,"sources":["index.ts"],"names":[],"mappings":";;AAEA,gDAA6C;AAE7C,6BAAqB;AAUrB,MAAa,aAAc,SAAQ,GAAuC;IAGjE,MAAM,KAAK,QAAQ;QACxB,IAAI,aAAa,CAAC,SAAS,KAAK,SAAS,EAAE;YACzC,aAAG,CAAC,KAAK,CAAC,kBAAS,EAAE,CAAC,CAAA;YACtB,aAAa,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAA;SACpC;QACD,OAAO,aAAa,CAAC,SAAS,CAAA;IAChC,CAAC;IAEM,MAAM,CAAC,EAAE,CAAC,CAAiB;QAChC,OAAO,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA;IAC9C,CAAC;IAEM,MAAM,CAAC,GAAG,CAAC,CAAiB,EAAE,MAAuB;QAC1D,OAAO,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,aAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;IAC7E,CAAC;CACF;AAlBD,sCAkBC;AAED,SAAgB,KAAK,CAAC,MAAuB;IAC3C,OAAO,UAAoC,CAAI;QAC7C,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;QAC5B,OAAO,CAAC,CAAA;IACV,CAAC,CAAA;AACH,CAAC;AALD,sBAKC","file":"index.js","sourcesContent":["import * as Css from 'csstype'\nimport {Component} from 'react'\nimport {jssPreset} from '@material-ui/styles'\nimport {StyleSheet} from 'jss'\nimport Jss from 'jss'\n\nexport interface StyleProperties {\n  [key: string]: Css.Properties | Css.PropertiesFallback | { [P in Css.SimplePseudos]?: Css.Properties } | StyleProperties\n}\n\nexport interface ComponentClass<A extends Component<P, S> = any, P = any, S = any> {\n  new(props: Readonly<P>): A\n}\n\nexport class StyleProvider extends Map<ComponentClass, StyleSheet<string>> {\n  private static sInstance: StyleProvider\n\n  public static get instance(): StyleProvider {\n    if (StyleProvider.sInstance === undefined) {\n      Jss.setup(jssPreset())\n      StyleProvider.sInstance = new Map()\n    }\n    return StyleProvider.sInstance\n  }\n\n  public static of(C: ComponentClass): Record<string, string> {\n    return StyleProvider.instance.get(C).classes\n  }\n\n  public static set(C: ComponentClass, styles: StyleProperties): StyleProvider {\n    return StyleProvider.instance.set(C, Jss.createStyleSheet(styles).attach())\n  }\n}\n\nexport function Style(styles: StyleProperties): <T extends ComponentClass>(C: T) => T {\n  return function <T extends ComponentClass>(C: T): T {\n    StyleProvider.set(C, styles)\n    return C\n  }\n}"]}